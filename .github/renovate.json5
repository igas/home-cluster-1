{
  // General RenovateBot configuration
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>Truxnell/home-cluster//.github/renovate/commitMessage",
    "github>Truxnell/home-cluster//.github/renovate/labels",
    "github>Truxnell/home-cluster//.github/renovate/semanticCommits",
    // "github>Truxnell/home-cluster//.github/renovate/allowedVersions",
    "github>Truxnell/home-cluster//.github/renovate/autoMerge"
    // "github>Truxnell/home-cluster//.github/renovate/updateSchedule",
  ],
  "platform": "github",
  "username": "trux-bot[bot]",
  "repositories": ["Truxnell/home-cluster"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "Trux-Bot <19149206+Truxnell@users.noreply.github.com>",
  "timezone": "Australia/Melbourne",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  // Set up Renovate Managers
  "helmv3": {
    "fileMatch": ["k8s/charts/.+/Chart\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": [
      "k8s/manifests/.+/helmrelease\\.ya?ml$",
      "k8s/global/.+/helmrelease\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "k8s/manifests/.+\\.ya?ml$",
      "k8s/global/.+\\.ya?ml$"
    ]
  },
  "flux": {
   "fileMatch": [
     "k8s/mainfests/.+\\.ya?ml$",
     "k8s/global/.+\\.ya?ml$"
   ]
  },
  // "regexManagers": [
  //   // Read and process GitHub Releases
  //   {
  //     "fileMatch": [
  //       "k8s/mainfests/.+\\.ya?ml$",
  //       "k8s/global/.+\\.ya?ml$"
  //        ],
  //     "matchStrings": [
  //       "datasource=(?<datasource>.*?)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_version: \"(?<currentValue>.*)\"\n",
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n.*?_VERSION=\"(?<currentValue>.*)\"\n"
  //     ],
  //     "datasourceTemplate": "github-releases"
  //   },
  //   // Read and process Custom Resource Definitions
  //   {
  //     "fileMatch": [
  //       "k8s/mainfests/.+\\.ya?ml$",
  //       "k8s/global/.+\\.ya?ml$"
  //        ],
  //     "matchStrings": [
  //       "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
  //       "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
  //     ],
  //     "datasourceTemplate": "helm"
  //   },
  //   // Read and process Custom Resources
  //   {
  //     "fileMatch": [
  //       "k8s/mainfests/.+\\.ya?ml$",
  //       "k8s/global/.+\\.ya?ml$"
  //        ],
  //     "matchStrings": [
  //       "datasource=(?<datasource>.*?) depName=(?<depName>.*?)\n .*: (?<currentValue>.*=?)"
  //     ],
  //     "datasourceTemplate": "docker"
  //   }
  // ],
  "packageRules": [
    // Setup datasources
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // Custom version schemes
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["blakeblackshear/frigate"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["xirixiz/dsmr-reader-docker"],
      "versioning": "regex:^(?<compatibility>.*)-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["quay.io/minio/minio"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/linuxserver/calibre",
        "ghcr.io/linuxserver/calibre-web"
      ],
      "versioning": "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/airsonic-advanced/airsonic-advanced"
      ],
      "versioning": "regex:^edge-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-SNAPSHOT\\.(?<build>\\d+)$"
    },
    // Version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent"
      ],
      "versioning": "loose"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "tomsquest/docker-radicale"
      ],
      "versioning": "pep440"
    },
    // Group packages
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^rook.ceph"],
      "groupName": "rook-ceph-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "k8s.gcr.io/kube-apiserver",
        "k8s.gcr.io/kube-controller-manager",
        "k8s.gcr.io/kube-scheduler",
        "ghcr.io/siderolabs/kubelet"
      ],
      "groupName": "kubernetes",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackageNames": [
        "quay.io/cilium/cilium",
        "quay.io/cilium/operator-generic",
        "cilium"
      ],
      "groupName": "cilium",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
