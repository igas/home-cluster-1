{
  enabled: true,
  timezone: "Australia/Melbourne",
  semanticCommits: "enabled",
  dependencyDashboard: true,
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  commitBody: "Signed-off-by: Nat Allan <19149206+Truxnell@users.noreply.github.com>",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  kubernetes: {
    fileMatch: [
      "k8s/manifests/.+\\.yaml$"
    ],
  },
  "helm-values": {
    fileMatch: [
      "k8s/manifests/.+\\.yaml$"
    ],
  },
  regexManagers: [
    {
      fileMatch: [
        "k8s/manifests/.+\\.yaml$"
      ],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
    {
      fileMatch: ["k8s/manifests/cert-manager/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
      ],
      datasourceTemplate: "helm",
    },
    {
      fileMatch: ["k8s/manifests/system-monitoring/kube-prometheus-stack/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
    {
      fileMatch: ["k8s/manifests/rook-ceph/.+\\.yaml$"],
      matchStrings: [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: (?<currentValue>.*)\n",
      ],
      datasourceTemplate: "helm",
    },
  ],
  packageRules: [
    {
      matchDatasources: ["helm"],
      semanticCommitScope: "charts",
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    {
      matchDatasources: ["docker"],
      enabled: true,
      matchUpdateTypes: ["major", "minor", "patch"],
    },
    {
      matchDatasources: ["docker"],
      semanticCommitScope: "images",
      separateMinorPatch: true,
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(images)!: ",
      labels: ["renovate/image", "dep/major"],
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      labels: ["renovate/image", "dep/minor"],
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      labels: ["renovate/image", "dep/patch"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(charts)!: ",
      labels: ["renovate/helm", "dep/major"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      labels: ["renovate/helm", "dep/minor"],
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      labels: ["renovate/helm", "dep/patch"],
    },
    {
      matchDatasources: ["docker"],
      versioning: "loose",
      matchPackageNames: [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent",
      ],
    },
    {
      matchDatasources: ["docker"],
      automerge: true,
      automergeType: "branch",
      requiredStatusChecks: null,
      matchUpdateTypes: ["minor", "patch", "digest"],
      matchPackageNames: [
        "flaresolverr/flaresolverr",
        "ghcr.io/k8s-at-home/jackett",
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/sonarr",
        "ghcr.io/k8s-at-home/lidarr",
        "ghcr.io/k8s-at-home/qbittorrent",
        "ghcr.io/k8s-at-home/nzbget",
        "ghcr.io/k8s-at-home/nzbhydra2",
        "ghcr.io/k8s-at-home/prowlarr",
        "ghcr.io/k8s-at-home/readarr",
        "ghcr.io/k8s-at-home/qbittorrent",
        "ghcr.io/k8s-at-home/prowlarr",
        "joplin/server",
        "jacobalberty/unifi",
        "linuxserver/calibre-web",
        "linuxserver/pyload",
        "vexorian/dizquetv",
        "b4bz/homer",
        "sctx/overseerr",
        "b4bz/homer",
        "vexorian/dizquetv",
        "joplin/server",
        "grafana/grafana",
      ],
      schedule: ["after 2am, before 8am"],
    },
    {
      matchDatasources: ["helm", "docker"],
      automerge: false,
      requiredStatusChecks: null,
      matchUpdateTypes: ["major", "minor", "patch", "digest"],
      groupName: "Factorio Servers",
      labels: ["automerge-servers"],
      matchPackageNames: ["factoriotools/factorio"],
    },
    {
      matchDatasources: ["helm", "docker"],
      matchPackagePatterns: ["^rook.ceph"],
      groupName: "rook-ceph-suite",
      additionalBranchPrefix: "",
      separateMinorPatch: true,
    }
  ]
}
