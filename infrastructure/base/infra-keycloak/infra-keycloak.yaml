---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: keycloak
  namespace: infra-keycloak
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://codecentric.github.io/helm-charts
      chart: keycloak
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 5m
  values:
    auth:
      ## Create administrator user on boot.
      ##
      createAdminUser: true
      ## Keycloak administrator user and password
      ##
      adminUser: truxnell
      # adminPassword: ""
      ## Wildfly management user and password
      ##
      # managementUser: manager
      # managementPassword: ""
      ## An already existing secret containing auth info
      ##
      existingSecret:
        name: keycloak-secrets
        keyMapping:
          admin-password: adminPassword
          # management-password: myManagementPasswordKey
          database-password: databasePassword
          # tls-keystore-password: myTlsKeystorePasswordKey
          # tls-truestore-password: myTlsTruestorePasswordKey
      # #
      ## Map of already existing secrets containing passwords
      ##
      ## Override `existingSecret` and other secret values
      ##
      # existingSecretPerPassword:
      #   keyMapping:
      #     adminPassword: KEYCLOAK_ADMIN_PASSWORD
      #     managementPassword: KEYCLOAK_MANAGEMENT_PASSWORD
      #     databasePassword: password
      #     tlsKeystorePassword: JKS_KEYSTORE_TRUSTSTORE_PASSWORD
      #     tlsTruststorePassword: JKS_KEYSTORE_TRUSTSTORE_PASSWORD
      #   adminPassword:
      #     name: keycloak-test2.credentials # release-name
      #   managementPassword:
      #     name: keycloak-test2.credentials
      #   databasePassword:
      #     name: keycloak.pocwatt-keycloak-cluster.credentials
      #   tlsKeystorePassword:
      #     name: keycloak-test2.credentials
      #   tlsTruststorePassword:
      #     name: keycloak-test2.credentials
      #
      ## TLS encryption parameters
      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#tls-encryption
      ##
      ## Enable Proxy Address Forwarding
      ## ref: https://www.keycloak.org/docs/latest/server_installation/#_setting-up-a-load-balancer-or-proxy
      ##
    proxyAddressForwarding: false

    ingress:
      ## Set to true to enable ingress record generation
      ##
      enabled: true

      ## Set this to true in order to add the corresponding annotations for cert-manager
      ##
      certManager: false

      ## When the ingress is enabled, a host pointing to this will be created
      ##
      hostname: auth.l.voltaicforge.com

      ## Override API Version (automatically detected if not set)
      ##
      apiVersion:

      ## Ingress Path
      ##
      path: /

      ## Ingress Path type
      ##
      pathType: ImplementationSpecific

      ## Ingress annotations done as key:value pairs
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
      ##
      ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
      ##
      annotations: {}

      ## Enable TLS configuration for the hostname defined at ingress.hostname parameter
      ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
      ## You can use the ingress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or
      ## let the chart create self-signed certificates for you
      ##
      tls: false

      ## The list of additional hostnames to be covered with this ingress record.
      ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
      ## Example:
      ## extraHosts:
      ##   - name: keycloak.local
      ##     path: /
      ##
      extraHosts: []

      ## The tls configuration for additional hostnames to be covered with this ingress record.
      ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## Example:
      ## extraTls:
      ## - hosts:
      ##     - keycloak.local
      ##   secretName: keycloak.local-tls
      ##
      extraTls: []

      ## If you're providing your own certificates, please use this to add the certificates as secrets
      ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----
      ## name should line up with a secretName set further up
      ##
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create the secret for you
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ##
      ## Example
      ## secrets:
      ##   - name: aspnet-core.local-tls
      ##     key: ""
      ##     certificate: ""
      ##
      secrets: []

      ## The service port to be used by this ingress.
      ## Default is http. Alternative is https.
      servicePort: http
    postgresql:
      ## Whether to deploy a postgresql server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
      ##
      enabled: false
      ## PostgreSQL user (has superuser privileges if username is `postgres`)
      ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#setting-the-root-password-on-first-run
      ##
      # postgresqlUsername: bn_keycloak
      ## PostgreSQL password
      ## Defaults to a random 10-character alphanumeric string if not set
      ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#setting-the-root-password-on-first-run
      ##
      # postgresqlPassword: some-password
      ## Database name to create
      ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
      ##
      # postgresqlDatabase: bitnami_keycloak
      ## In case of postgresql.enabled = true, allow the usage of existing secrets for postgresql
      ##
      # existingSecret:
      ## PostgreSQL data Persistent Volume Storage Class
      ##
      # persistence:
      # enabled: true

    ##
    ## External database configuration
    ##
    externalDatabase:
      ## Database host
      ##
      host: "mariadb-galera.infra-mariadb-galera.svc.cluster.local"
      ## Database port
      ##
      port: 3306
      ## non admin username for Keycloak Database
      ##
      user: keycloak
      ## Database password
      ##
      # password: ""
      ## Database name
      ##
      database: keycloak
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 200m
      #   memory: 256Mi
      requests: {}
      #   cpu: 200m
      #   memory: 10Mi
