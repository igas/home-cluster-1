---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 10.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  # Values link: https://github.com/k8s-at-home/charts/blob/master/charts/stable/qbittorrent/values.yaml
  values:
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      tag: v4.3.5
    env:
      TZ: "Australia/Melbourne"
      WAIT_FOR_VPN: "true"
    service:
      main:
        additionalServices:
        - enabled: true
          nameSuffix: bittorrent
          type: LoadBalancer
          externalIPs:
          - "${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_QBITTORRENT}"
          port:
            port: 51314
            name: bittorrent
            protocol: TCP
            targetPort: 51314
          externalTrafficPolicy: Local
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      media:
        enabled: true
        existingClaim: leela-downloads-pvc
      shared:
        enabled: true
        emptyDir: 
          enabled: true
        mountPath: /shared
    podSecurityContext:
      supplementalGroups:
      - 100
    addons:
      vpn:
        enabled: true
        # This Should be set to `openvpn`. This will set the add-on to use the default settings for OpenVPN based connections.
        type: openvpn

        openvpn:
          # This gets read by the Helm chart. The default OpenVPN image reads this and uses it to connect to the VPN provider.
          auth: |
            ${OPENVPN_USERNAME}
            ${OPENVPN_PASSWORD}

        # If the podSecurityContext is set to run as a different user, make sure to run the OpenVPN container as root. 
        # This is required for it to be able to read certain configuration files. 
        securityContext:
          runAsGroup: 0
          runAsUser: 0

        env:
          # Set this environment variable to 'on' to make sure all traffic gets routed through the VPN container.
          # Make sure to check the other environment variables for the OpenVPN image to see how you can exclude certain
          # traffic from these firewall rules.
          FIREWALL: 'on'

        # The .ovpn file provided by your VPN provider goes here.
        #
        # Any CA / certificate must either be placed inline, or provided through an additionalVolumeMount so that OpenVPN can find it.
        #
        # Pay close attention to the last 3 lines in this file. They must be added if you wish to run a script when the connection
        # is opened / closed.
        configFileSecret: qbittorrent-vpnconfig


        # The scripts that get run when the VPN connection opens/closes are defined here.
        # The default scripts will write a string to represent the current connection state to a file.
        # Our qBittorrent image has a feature that can wait for this file to contain the word 'connected' before actually starting the application.
        scripts:
          up: |-
            #!/bin/bash
            /etc/openvpn/up.sh
            echo "connected" > /shared/vpnstatus

          down: |-
            #!/bin/bash
            /etc/openvpn/down.sh
            echo "disconnected" > /shared/vpnstatus