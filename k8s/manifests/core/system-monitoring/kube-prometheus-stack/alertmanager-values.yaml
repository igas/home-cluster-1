---
alertmanager:
  config:
    receivers:
      - name: "null"
      - name: "pushover"
        pushover_configs:
          - user_key: ${SECRET_KUBE_PROMETHEUS_STACK_ALERTMANAGER_PUSHOVER_USER_KEY}
            token: ${SECRET_KUBE_PROMETHEUS_STACK_ALERTMANAGER_PUSHOVER_TOKEN}
            send_resolved: true
            html: true
            priority: |-
              {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
            url_title: View in Alert Manager
            title: |-
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ .CommonLabels.alertname }}
            message: |-
              {{- range .Alerts }}
                {{- if ne .Labels.severity "" }}
                  <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                {{- else }}
                  <b>Severity:</b> <i>N/A</i>
                {{- end }}
                {{- if ne .Annotations.description "" }}
                  <b>Description:</b> <i>{{ .Annotations.description }}</i>
                {{- else if ne .Annotations.summary "" }}
                  <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                {{- else if ne .Annotations.message "" }}
                  <b>Message:</b> <i>{{ .Annotations.message }}</i>
                {{- else }}
                  <b>Description:</b> <i>N/A</i>
                {{- end }}
                {{- if gt (len .Labels.SortedPairs) 0 }}
                  <b>Details:</b>
                  {{- range .Labels.SortedPairs }}
                    â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                  {{- end }}
                {{- end }}
              {{- end }}
    route:
      receiver: "pushover"
      routes:
        - receiver: "null"
          matchers:
            - alertname =~ "InfoInhibitor|Watchdog|RebootScheduled"
        - receiver: "pushover"
          matchers:
            - severity = "critical"
          continue: true

    inhibit_rules:
      - source_matchers:
          - severity = "critical"
        target_matchers:
          - severity = "warning"
        equal: ["alertname", "namespace"]

  ingress:
    enabled: true
    pathType: Prefix
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
      external-dns/is-public: "false"
      hajimari.io/enable: "true"
      hajimari.io/icon: bell-alert
      hajimari.io/appName: Alertmanager

    hosts:
      - &host alertmanager.${EXTERNAL_DOMAIN}
    tls:
      - secretName: tls.alertmanager
        hosts:
          - *host

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          resources:
            requests:
              storage: 1Gi

  resources:
    requests:
      cpu: 10m
      memory: 50M
    limits:
      memory: 99M
