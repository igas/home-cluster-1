---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: services
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: vaultwarden
      version: 3.3.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    # Values YAML: https://github.com/k8s-at-home/charts/blob/master/charts/stable/vaultwarden/values.yaml
    image:
      repository: ghcr.io/k8s-at-home/vaultwarden
      tag: v1.23.0

    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

    env:
      DATA_FOLDER: "config"
      DOMAIN: https://vault.${CLUSTER_DOMAIN}
      DATABASE_URL: ${VAULTWARDEN_DATABASE_URL}
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
      SIGNUPS_ALLOWED: "false"
      SMTP_FROM_NAME: Vault
      SMTP_FROM: vault@${CLUSTER_DOMAIN}
      SMTP_HOST: ${EMAIL_SMTP_HOST}
      SMTP_PORT: ${EMAIL_SMTP_PORT}
      SMTP_SSL: "true"
      SMTP_USERNAME: ${EMAIL_USERNAME}
      SMTP_PASSWORD: ${EMAIL_PASSWORD}
      TZ: "Australia/Melbourne"
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_ENABLED: true
      WEBSOCKET_PORT: 3012

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          external-dns.alpha.kubernetes.io/target: "ipv4.${CLUSTER_DOMAIN}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"

        hosts:
          - host: vault.${CLUSTER_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
              - path: /notifications/hub/negotiate
                pathType: Prefix
              - path: /notifications/hub
                pathType: Prefix
                servicePort: 3012
        tls:
          - hosts:
              - vault.${CLUSTER_DOMAIN}
            secretName: tls.vaultwarden
      admin:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          external-dns/is-public: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-system-rfc1918-ips@kubernetescrd
          hajimari.io/enable: "false"

        hosts:
          - host: "vault.${CLUSTER_DOMAIN}"
            paths:
              - path: /admin
                pathType: Prefix
        tls:
          - hosts:
              - "vault.${CLUSTER_DOMAIN}"
            secretName: vault-${CLUSTER_NAME}-tls
    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config-v1

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 2000Mi

    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /data
        securityContext:
          privileged: true
