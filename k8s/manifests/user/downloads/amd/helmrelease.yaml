---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app amd
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      chart: kah-common-chart
      version: 1.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  dependsOn:
    - name: lidarr
      namespace: organizarrs
  values:
    global:
      nameOverride: *app
    image:
      repository: randomninjaatk/lidarr-extended
      tag: latest@sha256:6945c3610b5369798efe2987e4c697c4abcebca575e50f2e50ffa7cceba46c2c
      pullPolicy: IfNotPresent

    initContainers:
      wait-for-lidarr:
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command:
          [
            "sh",
            "-c",
            'until nc -vz lidarr.organizarrs 8686; do echo "Waiting for lidarr..."; sleep 3; done;',
          ]

    env:
      TZ: ${TZ}
      PUID: 568
      PGUID: 568
      AUTOSTART: true
      audioFormat: native
      audioBitrate: lossless
      dlClientSearch: deezer
      arlToken: ${SECRET_ARL_TOKEN}
      addRelatedArtists: true

      SCRIPTINTERVAL: 1h
      DOWNLOADMODE: wanted
      FALLBACKSEARCH: True
      LIST: both
      SearchType: artist
      Concurrency: 10
      FORMAT: losless
      ENABLEPOSTPROCESSING: true
      FORCECONVERT: false
      requirequality: true
      MatchDistance: 10
      replaygain: true
      FolderPermissions: 766
      FilePermissions: 666
      MBRAINZMIRROR: https://musicbrainz.org
      MBRATELIMIT: 1
      LidarrUrl: http://lidarr.organizarrs:8686
      LidarrAPIkey: ${SECRET_LIDARR_API_KEY}
      NOTIFYPLEX: false
      PLEXLIBRARYNAME: Music
      PLEXURL: http://x.x.x.x:8686
      PLEXTOKEN: plextoken
      ALBUM_TYPE_FILTER: COMPILE
      POSTPROCESSTHREADS: 4

    service:
      main:
        ports:
          http:
            port: 80

    persistence:
      config:
        enabled: true
        existingClaim: amd-config
      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS}
            path: /volume1/downloads/
        mountPath: /downloads/
        readOnly: false
      nfs-nas-music:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDRESS}
            path: /volume1/music/
        mountPath: /media/music
        readOnly: false

    # Nothing to probe, so...
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
